<Project Sdk="Microsoft.NET.Sdk.Web">
    <!-- user defined properties -->
    <PropertyGroup>
        <TargetFramework>netcoreapp2.2</TargetFramework>
        <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <ClientApp>Views\</ClientApp>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(ClientRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="DotNetEnv" Version="1.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.App" />
        <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    </ItemGroup>

    <ItemGroup>
        <!-- blacklist node modules from being published -->
        <None Include="$(ClientApp)**" Exclude="$(ClientApp)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <Content Remove="Views\Project\Index.cshtml" />
      <Content Remove="wwwroot\img\bell.png" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="Views\Project\assets\Project_1_Poster.jpg" />
      <None Remove="Views\Project\assets\Project_2_Poster.jpg" />
      <None Remove="Views\Project\assets\Project_3_Poster.jpg" />
      <None Remove="Views\Project\assets\Project_4_Poster.jpg" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="Views\Project\assets\Project_1_Poster.jpg">
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </Content>
      <Content Include="Views\Project\assets\Project_2_Poster.jpg">
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </Content>
      <Content Include="Views\Project\assets\Project_3_Poster.jpg">
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </Content>
      <Content Include="Views\Project\assets\Project_4_Poster.jpg">
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <None Include="wwwroot\img\bell.png" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\folio\folio.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(ClientApp)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(ClientApp)" Command="npm install" />
    </Target>


    <Target Name="DevelopmentBuildClientApp" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
        <!-- development build JS resources -->
        <Exec WorkingDirectory="$(ClientApp)" Command="npm run build-dev" />
    </Target>

    <Target Name="ProductionBuildClientApp" BeforeTargets="Publish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(ClientApp)" Command="npm install" />
        <Exec WorkingDirectory="$(ClientApp)" Command="npm run build" />
    </Target>
</Project>
